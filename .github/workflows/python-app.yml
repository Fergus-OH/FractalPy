# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "numba" ]
  pull_request:
    branches: [ "numba" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: cache poetry install
      uses: actions/cache@v2
      with:
        path: ~/.local
        key: poetry-1.2.2

    - uses: snok/install-poetry@v1
      with:
        version: 1.1.12
        virtualenvs-create: true
        virtualenvs-in-project: true
        
    - name: cache deps
      id: cache-deps
      uses: actions/cache@v2
      with:
        path: .venv
        key: pydeps-${{ hashFiles('**/poetry.lock') }}
        
    - run: poetry install --no-interaction --no-root
      if: steps.cache-deps.outputs.cache-hit != 'true'
      
    - run: poetry install --no-interaction

    - name: Test with pytest
      run: |
        NUMBA_DISABLE_JIT=1 poetry run pytest --cache-clear --cov=fractalpy --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: ./coverage/reports/
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: true
